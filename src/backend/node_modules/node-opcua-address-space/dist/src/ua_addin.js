"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addDefaultInstanceBrowseName = exports.instantiateAddIn = void 0;
const node_opcua_basic_types_1 = require("node-opcua-basic-types");
const node_opcua_data_model_1 = require("node-opcua-data-model");
function instantiateAddIn(objectType, options) {
    let defaultName = options.defaultName;
    // check that objectType has he shape of an addInd
    const defaultInstanceBrowseName = objectType.getPropertyByName("DefaultInstanceBrowseName");
    if (!defaultInstanceBrowseName) {
        throw new Error("objectType must have a DefaultInstanceBrowseName property");
    }
    const browseName = (0, node_opcua_data_model_1.coerceQualifiedName)(defaultName || defaultInstanceBrowseName.readValue().value.value);
    const addIn = objectType.instantiate({
        browseName: browseName,
        modellingRule: options.modellingRule,
        namespace: objectType.namespace,
        copyAlsoModellingRules: options.copyAlsoModellingRules,
    });
    options.addInOf.addReference({
        referenceType: "HasAddIn",
        nodeId: addIn.nodeId
    });
    return addIn;
}
exports.instantiateAddIn = instantiateAddIn;
function addDefaultInstanceBrowseName(objectType) {
    const namespace1 = objectType.namespace;
    const uaVaraible = namespace1.addVariable({
        browseName: (0, node_opcua_data_model_1.coerceQualifiedName)({ name: "DefaultInstanceBrowseName", namespaceIndex: 0 }),
        propertyOf: objectType,
        typeDefinition: "PropertyType",
        dataType: node_opcua_basic_types_1.DataType.QualifiedName,
        value: {
            dataType: node_opcua_basic_types_1.DataType.QualifiedName,
            value: { namespaceIndex: namespace1.index, name: "JobManager" }
        },
        modellingRule: null
    });
    return uaVaraible;
}
exports.addDefaultInstanceBrowseName = addDefaultInstanceBrowseName;
//# sourceMappingURL=ua_addin.js.map